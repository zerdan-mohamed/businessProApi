USE pro_business_db;

-- pro_business_db.SUPPLIER_ORDER_PARAMS definition
CREATE TABLE IF NOT EXISTS SUPPLIER_ORDER_PARAMS (
    ORG_ID INT(11) NOT NULL auto_increment,
    COUNTER INT(11) UNSIGNED NOT NULL,
    PREFIX VARCHAR(30) NOT NULL,
    PRIMARY KEY(ORG_ID)
    )ENGINE=InnoDB CHARACTER SET=UTF8;

SET GLOBAL event_scheduler = ON;

CREATE EVENT IF NOT EXISTS SUPPLIER_ORDER_COUNTER_RESET
    ON SCHEDULE EVERY 1 YEAR
    STARTS '2022-01-01 00:00:00'
    DO
    UPDATE SUPPLIER_ORDER_PARAMS SET COUNTER = 0;

-- pro_business_db.STATUS definition
CREATE TABLE IF NOT EXISTS STATUS (
    ID INT NOT NULL auto_increment,
    NAME VARCHAR(30) NOT NULL,
    PRIMARY KEY(ID)
)ENGINE=InnoDB DEFAULT CHARSET=UTF8;

-- pro_business_db.SUPPLIER_ORDER definition
CREATE TABLE IF NOT EXISTS SUPPLIER_ORDER (
    ID_SUPPLIER_ORDER BIGINT NOT NULL auto_increment,
    UUID VARCHAR(100) NOT NULL,
    SUPPLIER_ORDER_NUMBER VARCHAR(30) NOT NULL,
    COMMENT VARCHAR(100),
    SUPPLIER_ORDER_STATUS INT,
    CREATION_DATE DATE NOT NULL,
    ID_SUPPLIER BIGINT,
    PRIMARY KEY(ID_SUPPLIER_ORDER),
    CONSTRAINT `FK_SUPPLIER_ORDER_SUPPLIER` FOREIGN KEY (ID_SUPPLIER) REFERENCES SUPPLIER(ID),
    CONSTRAINT `FK_SUPPLIER_ORDER_STATUS` FOREIGN KEY (SUPPLIER_ORDER_STATUS) REFERENCES STATUS(ID)
)ENGINE=InnoDB DEFAULT CHARSET=UTF8;

-- pro_business_db.SUPPLIER_ORDER_ITEM definition
CREATE TABLE IF NOT EXISTS SUPPLIER_ORDER_ITEM (
    ID_SUPPLIER_ORDER_ITEM BIGINT NOT NULL auto_increment,
    UUID VARCHAR(100) NOT NULL,
    QUANTITY DECIMAL(11, 2),
    MEASURE_UNITE VARCHAR(10),
    VAT_RATE DECIMAL(11, 2),
    PRICE_HT DECIMAL(11, 3),
    DISCOUNT DECIMAL(11, 2),
    ID_PRODUCT BIGINT NOT NULL,
    ID_SUPPLIER_ORDER BIGINT NOT NULL,
    PRIMARY KEY(ID_SUPPLIER_ORDER_ITEM),
    CONSTRAINT `FK_SUPPLIER_ORDER_ITEM_PRODUCT` FOREIGN KEY (ID_PRODUCT) REFERENCES PRODUCT(ID_PRODUCT),
    CONSTRAINT `FK_SUPPLIER_ORDER_ITEM_SUPPLIER_ORDER` FOREIGN KEY (ID_SUPPLIER_ORDER) REFERENCES SUPPLIER_ORDER(ID_SUPPLIER_ORDER)
)ENGINE=InnoDB CHARACTER SET=UTF8;
